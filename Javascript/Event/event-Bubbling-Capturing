Event bubbling একটি জাভাস্ক্রিপ্ট কনসেপ্ট যেখানে একটি ইভেন্ট, যেমন একটি ক্লিক বা কীবোর্ড ইন্টারঅ্যাকশন, ডম ট্রি (DOM Tree) এর নিচ থেকে উপরের দিকে ছড়িয়ে পড়ে। অর্থাৎ, কোনো child element-এ যদি একটি ইভেন্ট ঘটে, তবে সেই ইভেন্ট প্রথমে child element-এ ট্রিগার হয় এবং তারপর তা parent element, তারও parent element এভাবে ক্রমান্বয়ে উপরের দিকে ছড়িয়ে পড়ে যতক্ষণ না পুরো DOM tree এর শীর্ষে পৌঁছে।

উদাহরণ হিসেবে, ধরো তুমি একটি <div> এর ভিতরে একটি <button> রেখেছো। যদি তুমি সেই button-এ ক্লিক করো, প্রথমে সেই ইভেন্টটি button এ ঘটবে (child), তারপর তা <div> (parent) এবং তার পরবর্তী parent element গুলো পর্যন্ত ছড়িয়ে পড়বে। একে বলে "event bubbling"।

ইভেন্ট বাবলিং এর প্রক্রিয়াটি ডিফল্ট হিসেবে সক্রিয় থাকে, তবে চাইলে তা বন্ধও করা যায়। এজন্য event.stopPropagation() মেথড ব্যবহার করা হয়, যা ইভেন্টটিকে তার parent element পর্যন্ত ছড়িয়ে পড়া থেকে আটকায়।

Event Bubbling = (Child => Parent)

Event capturing জাভাস্ক্রিপ্টের একটি কনসেপ্ট, যা event bubbling-এর বিপরীতভাবে কাজ করে। এখানে ইভেন্টটি DOM tree-এর উপরের দিক থেকে (parent element) নিচের দিকে (child element) propagate হয়। অর্থাৎ, কোনো ইভেন্ট যখন ঘটে, তখন তা প্রথমে সবচেয়ে parent element এ ট্রিগার হয় এবং ক্রমান্বয়ে child element পর্যন্ত পৌঁছায়।

ধরি তুমি একটি <div> এর ভিতরে একটি <button> রেখেছো। যদি তুমি capturing mode ব্যবহার করে একটি ইভেন্ট সেট করো, তাহলে যখন তুমি button-এ ক্লিক করবে, সেই ক্লিক ইভেন্টটি প্রথমে <div> (parent element) এ ট্রিগার হবে এবং তারপর child element এর দিকে যাবে। এভাবে ইভেন্টটি উপরের দিক থেকে নিচের দিকে propagate হয়।

ইভেন্ট ক্যাপচারিং এর প্রক্রিয়াটি তখন কাজ করে যখন ইভেন্ট লিসেনার অ্যাড করার সময় {capture: true} অপশনটি পাস করা হয়:

javascript
Copy code
div.addEventListener('click', function(event) {
  console.log('Div clicked!');
}, {capture: true});

এভাবে capturing mode এ ইভেন্ট হ্যান্ডেল করা হয়। ইভেন্ট bubbling ও capturing দুইটি পদ্ধতিই DOM ইভেন্ট হ্যান্ডলিং এর ক্ষেত্রে ব্যবহৃত হয়, যা ইভেন্ট কীভাবে propagate হবে তা নির্ধারণ করে।


Single Threaded
Javascript Enigine
Event Loop 
var let const
Data Types
Callback Function 
Promise & Chaining
== vs ===
Create Object
rest & spread
